#!/bin/bash
### BEGIN INIT INFO
# Provides:         celar-orchestrator service
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start celar-orchestrator service daemon
# Description:       To start-stop celar-orchestrator
### END INIT INFO

# This script is deployed at /etc/init.d/ and it is used to manage the 
# CELAR Orchestrator.

[ -z "$CELAR_ORCHESTRATOR_HOME" ] && CELAR_ORCHESTRATOR_HOME="/opt/celar/celar-orchestrator"

LIB_DIR=$CELAR_ORCHESTRATOR_HOME/lib
CONF_DIR=$CELAR_ORCHESTRATOR_HOME/conf

MAIN_CLASS=gr.ntua.cslab.orchestrator.Main

CLASSPATH=$CONF_DIR
CLASSPATH=$CLASSPATH:$(echo $LIB_DIR/*.jar | tr ' ' ':')
CLASSPATH=$CLASSPATH:$CELAR_ORCHESTRATOR_HOME/celar-orchestrator.jar


SLIPSTREAM_CONTEXT="/opt/slipstream/client/bin/slipstream.context"


configure_server(){
CONF_FILE=$CONF_DIR/orchestrator.properties

DEPLOYMENT_ID=$(grep diid $SLIPSTREAM_CONTEXT | awk '{print $3}')
SS_SERVER_IP=$(grep serviceurl $SLIPSTREAM_CONTEXT  |  tr '/' '\t' | awk '{print $4}')
SS_USERNAME=$(grep username $SLIPSTREAM_CONTEXT  |  tr '/' '\t' | awk '{print $3}')

/bin/sed -i "s/.*slipstream.deployment.id.*/slipstream.deployment.id = $DEPLOYMENT_ID/g" $CONF_FILE
/bin/sed -i "s/.*slipstream.username.*/slipstream.username = $SS_USERNAME/g" $CONF_FILE
/bin/sed -i "s/.*slipstream.server.host.*/slipstream.server.host = $SS_SERVER_IP/g" $CONF_FILE
/bin/sed -i "s/.*celar.server.host.*/celar.server.host = $SS_SERVER_IP/" $CONF_FILE
/bin/sed -i "s/.*postgresql.host.*/postgresql.host = $SS_SERVER_IP/" $CONF_FILE
}


start() {
        PID=$(ps aux | grep celar-orchestrator | grep java| awk '{print $2}')
	[ "$PID" !=  "" ] && echo "CELAR Orchestrator already running ($PID)" && exit 0
        configure_server
	java -Dname=celar-orchestrator -cp $CLASSPATH  $MAIN_CLASS &
}

stop() {
	PID=$(ps aux | grep celar-orchestrator | grep java| awk '{print $2}')
	[ "$PID" == "" ] && echo "CELAR Orchestrator not running" && exit 0
	kill -TERM $PID
}

status() {
        PID=$(ps aux | grep celar-orchestrator | grep java| awk '{print $2}')
	if [ "$PID" == "" ]; then
                echo "CELAR Orchestrator not running"
	else
		echo "CELAR Orchestrator running ($PID)"
	fi
}


case $1 in
	start)
		start;
		;;
	stop)
		stop;
		;;
	restart)
		stop && start;
		;;
	status)
		status;
		;;
	*)
		echo "$0 {start|stop|status|restart}"
		;;
esac

